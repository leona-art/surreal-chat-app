
-- ------------------------------
-- -- Export generated by Surrealist on 2023-11-29T11:01:16.431Z
-- ------------------------------


-- ------------------------------
-- OPTION
-- ------------------------------

OPTION IMPORT;

-- ------------------------------
-- SCOPES
-- ------------------------------

DEFINE SCOPE user SESSION 1h SIGNUP (CREATE user CONTENT { email: $email, name: $name, password: crypto::argon2::generate($password) }) SIGNIN (SELECT * FROM user WHERE email = $email AND crypto::argon2::compare(password, $password));

-- ------------------------------
-- TABLE: join
-- ------------------------------

DEFINE TABLE join SCHEMAFULL PERMISSIONS FOR select, create FULL, FOR update NONE, FOR delete WHERE in == $auth.id;

DEFINE FIELD in ON join TYPE record<user> ASSERT $value = $auth.id;
DEFINE FIELD out ON join TYPE record<room>;
DEFINE FIELD owner ON join TYPE option<bool> PERMISSIONS FOR select FULL, FOR create, update, delete NONE;

-- ------------------------------
-- TABLE: message
-- ------------------------------

DEFINE TABLE message SCHEMAFULL PERMISSIONS FOR select WHERE (->posted_in->room<-join<-user.id) CONTAINS $auth.id, FOR create FULL, FOR update, delete WHERE (->posted_in->room<-join<-user.id) == $auth.id;

DEFINE FIELD content ON message TYPE string;

DEFINE EVENT post_message ON message WHEN $event = 'CREATE' THEN (RELATE ($auth.id) -> posts -> ($after.id));

-- ------------------------------
-- TABLE: posted_in
-- ------------------------------

DEFINE TABLE posted_in SCHEMALESS;

DEFINE FIELD in ON posted_in TYPE record<message>;
DEFINE FIELD out ON posted_in TYPE record<room>;

-- ------------------------------
-- TABLE: posts
-- ------------------------------

DEFINE TABLE posts SCHEMAFULL PERMISSIONS FOR select FULL, FOR create, update, delete NONE;

DEFINE FIELD in ON posts TYPE record<user>;
DEFINE FIELD out ON posts TYPE record<message>;

-- ------------------------------
-- TABLE: room
-- ------------------------------

DEFINE TABLE room SCHEMAFULL PERMISSIONS FOR select, create FULL, FOR update, delete WHERE <-(join WHERE owner)<-user.id CONTAINS $auth.id;

DEFINE FIELD name ON room TYPE string;

DEFINE EVENT create_room ON room WHEN $event = 'CREATE' THEN (RELATE ($auth.id) -> join -> ($after.id) SET owner = true);

-- ------------------------------
-- TABLE: user
-- ------------------------------

DEFINE TABLE user SCHEMAFULL PERMISSIONS FOR select FULL, FOR create NONE, FOR update, delete WHERE $auth.id == id;

DEFINE FIELD created_at ON user TYPE datetime DEFAULT time::now();
DEFINE FIELD email ON user TYPE string ASSERT string::is::email($value);
DEFINE FIELD name ON user TYPE string;
DEFINE FIELD password ON user TYPE string PERMISSIONS FOR select, delete NONE, FOR create FULL, FOR update WHERE $auth.id == id;

DEFINE INDEX email_index ON user FIELDS email UNIQUE;